### Coffee Machine Project ###

MENU = {
    "espresso": {
        "ingredients": {
            "water": 50,
            "coffee": 18,
        },
        "cost": 1.5,
    },
    "latte": {
        "ingredients": {
            "water": 200,
            "milk": 150,
            "coffee": 24,
        },
        "cost": 2.5,
    },
    "cappuccino": {
        "ingredients": {
            "water": 250,
            "milk": 100,
            "coffee": 24,
        },
        "cost": 3.0,
    }
}

resources = {
    "water": 300,
    "milk": 200,
    "coffee": 100,
}

money = 0

def report(money):
    if customer_choice == "report":
        print(f'''Water: {resources["water"]}ml
Milk: {resources["milk"]}ml
Coffee: {resources["coffee"]}gm
Money = ${money}''')
        return


# How much money received
def money_received():
    quarters = int(input("How many quarters: "))
    dimes = int(input("How many dimes: "))
    nickles = int(input("How many nickles: "))
    penny = int(input("How many pennies: "))
    return 0.25 * quarters + 0.1 * dimes + 0.05 * nickles + 0.01 * penny


# Whether money is enough or not
def is_money_enough(choice):
    global money
    print("Please Insert Coins.")
    received = money_received()
    if MENU[choice]["cost"] < received:
        change = round(received - MENU[choice]["cost"], 2)
        print(f"Here is your change ${change}. Enjoy your {choice}!")
        money += MENU[choice]["cost"]
        return True
    else:
        print("Sorry that's not enough money. Money refunded.")
        return False


# whether resources are enough or not
def is_resources_enough(choice):
    for resource_required in MENU[choice]["ingredients"]:
        if resources[resource_required] < MENU[choice]["ingredients"][resource_required]:
            print(f"Sorry there is not enough {resource_required}.")
            return False
    return True

game_over = False
while  not game_over:
    customer_choice = input("What would you like? (espresso/latte/cappuccino): ").lower()
    report(money)
    if customer_choice == "report":
        continue
    elif is_resources_enough(customer_choice):
        if is_money_enough(customer_choice):
            for left in MENU[customer_choice]["ingredients"]:
                resources[left] -= MENU[customer_choice]["ingredients"][left]



